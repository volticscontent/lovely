// Schema ULTRA SIMPLIFICADO do Lovely App
// Apenas o essencial: usuários e perfis básicos

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ==================== MODELOS ESSENCIAIS ====================

// Usuários
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String?  // Opcional para usuários criados via webhook
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamento
  profile      Profile?
  subscription Subscription?

  @@map("users")
}

// Perfil básico do usuário
model Profile {
  id            String   @id @default(uuid())
  userId        String   @unique
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Informações básicas
  partnerName   String?
  moodToday     String   @default("PLAYFUL")
  darinessLevel Int      @default(1) // 1-10
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("profiles")
}

// Assinaturas dos usuários
model Subscription {
  id          String   @id @default(uuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Dados do Perfect Pay
  planCode    String   // PPU38CPQ6NQ, PPU38CPQ73K, PPU38CPQ742
  planType    String   // basico, medio, premium
  saleCode    String   @unique // Código da venda do Perfect Pay
  status      String   @default("ACTIVE") // ACTIVE, CANCELLED, EXPIRED
  
  // Valores
  amount      Float
  currency    String   @default("BRL")
  
  // Datas
  startDate   DateTime @default(now())
  expiresAt   DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("subscriptions")
}

// Log de webhooks recebidos
model WebhookLog {
  id          String   @id @default(uuid())
  token       String   // Token do Perfect Pay
  saleCode    String   // Código da venda
  status      String   // Status da venda
  event       String   // Tipo do evento
  payload     String   // JSON completo do webhook
  processed   Boolean  @default(false)
  error       String?  // Erro se houver
  createdAt   DateTime @default(now())

  @@map("webhook_logs")
} 